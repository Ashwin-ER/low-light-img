# -*- coding: utf-8 -*-
"""low-light-image-enhancement-zerodce.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q1OW1XVLIyTLhNAbFlGB6FoTnAQhOvfP
"""

!wget https://i.ibb.co/6n3Ph0n/low-light-image.png

!pip install transformers huggingface_hub

import transformers
import tensorflow as tf
from tensorflow import keras
from PIL import Image
import numpy as np
from huggingface_hub import from_pretrained_keras

model = from_pretrained_keras("keras-io/low-light-image-enhancement")

# create inference function
def inference(o_image):
  # preprocess for the model
  image = keras.preprocessing.image.img_to_array(o_image)
  image = image.astype("float32") / 255.0
  image = np.expand_dims(image, axis=0) # create batch of 1 image
  print(image.shape) # should be (1, H, W, C)
  output_image = model(image) # run the image through model
  output_image = post_process(image, output_image) # will implement this later
  output_image = tf.cast((output_image[0, :, :, :] * 255), dtype=np.uint8) # processing for PIL.Image
  output_image = Image.fromarray(output_image.numpy())
  return output_image

def post_process(image, output):
  # from zero_dce post process
  r1 = output[:, :, :, :3]
  r2 = output[:, :, :, 3:6]
  r3 = output[:, :, :, 6:9]
  r4 = output[:, :, :, 9:12]
  r5 = output[:, :, :, 12:15]
  r6 = output[:, :, :, 15:18]
  r7 = output[:, :, :, 18:21]
  r8 = output[:, :, :, 21:24]
  x = image + r1 * (tf.square(image) - image)
  x = x + r2 * (tf.square(x) - x)
  enhanced_img = x + r4 * (tf.square(x) - x)
  x = enhanced_img + r5 * (tf.square(enhanced_img) - enhanced_img)
  x = x + r6 * (tf.square(x) - x)
  x = x + r7 * (tf.square(x) - x)
  enhanced_img = x + r8 * (tf.square(x) - x)
  return enhanced_img

orig = Image.open("download (4).jpeg")
orig

enhanced = inference(orig)
enhanced

# you can see the ZeroDCE model does a very good job of predicting the colors of the stadium and enhancing it.
# That's it for this video. see you in the next one